#!/usr/bin/env python
# encoding: utf-8
"""
code_phrase_geneator.py

Created by Scott Roberts.
Copyright (c) 2011 TogaFoamParty Studios. All rights reserved.
"""

import sys
import getopt
import random


help_message = '''
Code Phrase Generator
-n or --number: Number of sample code phrases given. (Default is 5)
-p or --prefix: Uses a prefix word along with a random codeword instead of two codewords.
'''

PREFIXES = [
'Artisan',
'Azure',
'Alpha',
'Bravo',
'Charlie',
'Delta',
'Echo',
'Foxtrot',
'Golf',
'Hotel',
'India',
'Juliet',
'Kilo',
'Lima',
'Mike',
'November',
'Oscar',
'Papa',
'Quebec',
'Romeo',
'Sierra',
'Tango',
'Uniform',
'Victor',
'Whiskey',
'X-ray',
'Yankee',
'Zulu',
'Black',
'Blue',
'Brown',
'Green',
'Indigo',
'Jade',
'Orange',
'Pink',
'Purple',
'Red',
'Violet',
'Yellow',
'Silver',
'Solar',
'Sunrise',
'Crescent',
'Relentless',
'Polar'
]

CODEWORDS = [
'Mavrick',
'Diesel',
'Cobra',
'Abacus',
'Thunder'
'Bright',
'Condor',
'Eclipse',
'Flavius',
'Fusion',
'Garden',
'Parabellum',
'Spirit',
'Ribbon',
'Vigilance',
'Endeavour',
'Atlas',
'Quest',
'Kratos',
'Dragon',
'Fast',
'Death',
'Nobel',
'Strike',
'Sabre',
'Ace',
'Command',
'Impairor',
'Ibis',
'Velator',
'Reaper',
'Crucifier',
'Executioner',
'Inquisitor',
'Magnate',
'Punisher',
'Tormentor',
'Bantam',
'Condor',
'Griffin',
'Heron',
'Kestrel',
'Merlin',
'Maulus',
'Navitas',
'Breacher',
'Burst',
'Rifter',
'Slasher',
'Vigil',
'Coercer',
'Catalyst',
'Thrasher',
'Cruisers',
'Arbitrator',
'Maller',
'Omen',
'Blackbird',
'Moa',
'Osprey',
'Thorax',
'Vexor',
'Bellicose',
'Rupture',
'Scythe',
'Stabber',
'Harbinger',
'Prophecy',
'Drake',
'Ferox',
'Brutix',
'Myrmidon',
'Cyclone',
'Hurricane',
'Abaddon',
'Apocalypse',
'Armageddon',
'Raven',
'Rokh',
'Scorpion',
'Dominix',
'Hyperion',
'Megathron',
'Maelstrom',
'Tempest',
'Typhoon',
'Retribution',
'Vengeance',
'Harpy',
'Hawk',
'Enyo',
'Ishkur',
'Jaguar',
'Wolf',
'Marauder',
'Paladin',
'Golem',
'Kronos',
'Vargur',
'Redeemer',
'Widow',
'Sin',
'Panther',
'Sentinel',
'Kitsune',
'Hyena',
'Purifier',
'Buzzard',
'Manticore',
'Helios',
'Nemesis',
'Cheetah',
'Hound',
'Interceptor',
'Crusader',
'Malediction',
'Crow',
'Raptor',
'Ares',
'Taranis',
'Claw',
'Stiletto',
'Heretic',
'Eris',
'Sabre',
'Onyx',
'Phobos',
'Broadsword',
'Sacrilege',
'Zealot',
'Cerberus',
'Eagle',
'Deimos',
'Ishtar',
'Muninn',
'Vagabond',
'Curse',
'Pilgrim',
'Falcon',
'Rook',
'Arazu',
'Lachesis',
'Huginn',
'Rapier',
'Absolution',
'Damnation',
'Nighthawk',
'Vulture',
'Astarte',
'Eos',
'Claymore',
'Sleipnir',
'Legion',
'Tengu',
'Proteus',
'Loki',
'Aeon',
'Archon',
'Chimera',
'Wyvern',
'Nyx',
'Thanatos',
'Hel',
'Nidhoggur',
'Dreadnoughts',
'Revelation',
'Phoenix',
'Moros',
'Naglfar',
'Titan',
'Avatar',
'Leviathan',
'Erebus',
'Ragnarok',
'Bestower',
'Sigil',
'Badger',
'Hoarder',
'Mammoth',
'Wreathe',
'Providence',
'Charon',
'Obelisk',
'Fenrir',
'Ark',
'Rhea',
'Anshar',
'Nomad',
'Impel',
'Prorator',
'Bustard',
'Crane',
'Occator',
'Viator',
'Mastodon',
'Prowler',
'Guardian',
'Basilisk',
'Oneiros',
'Scimitar',
'Orca',
'Covetor',
'Procurer',
'Retriever',
'Exhumer',
'Hulk	',
'Mackinaw',
'Skiff	',
'Noctis	',
'Rorqual',
'Anchor',
'Angel',
'Anvil',
'Archer',
'Arrow',
'Aster',
'Badger',
'Bamboo',
'Banner',
'Barley',
'Beard',
'Bishop',
'Boar',
'Boy',
'Bracket',
'Bunny',
'Cat',
'Cedar',
'Cheese',
'Club',
'Corkscrew',
'Crop',
'Danube',
'Dean',
'Devil',
'Diamond',
'Diver',
'Dolphin',
'Drover',
'Duck',
'Duckling',
'Duster',
'Envoy',
'Flag',
'Flannel',
'Flash',
'Flax',
'Fox',
'Friend',
'Garland',
'Garlic',
'Gate',
'Ginger',
'Granite',
'Grass',
'Hammer',
'Hammock',
'Harvest',
'Hawk',
'Hebe',
'Herald',
'Jack',
'Jacket',
'Jay',
'Joker',
'Knight',
'Lemon',
'Light',
'Lizard',
'Mace',
'Maria',
'Mist',
'Moon',
'Neck',
'Nell',
'Palm',
'Parrot',
'Passion',
'Peacock',
'Picture',
'Pippin',
'Poodle',
'Possum',
'Prince',
'Putter',
'Queen',
'Rapier',
'Reaper',
'River',
'Rock',
'Rose',
'Rosette',
'Saga',
'Sand',
'Sapphire',
'Satin',
'Setter',
'Shoes',
'Shrimp',
'Silk',
'Sky',
'Slug',
'Snow',
'Sparkler',
'Star',
'Steel',
'Steer',
'Stone',
'Streak',
'Study',
'Sugar',
'Sun',
'Tartan',
'Temple',
'Ticket',
'Top',
'Tulip',
'Vesta',
'Vision',
'Vixen',
'Walnut',
'Water',
'Water',
'Willow',
'Wizard',
'Yeoman'
]


class Usage(Exception):
	def __init__(self, msg):
		self.msg = msg

def generate(prefix=False, number=5):
	while number > 0:
		if prefix:
			word1 = PREFIXES[int(random.uniform(0,len(PREFIXES)))]
		else:
			word1 = CODEWORDS[int(random.uniform(0,len(CODEWORDS)))]
		word2 = CODEWORDS[int(random.uniform(0,len(CODEWORDS)))]
		print "- %s %s" % (word1, word2)
		
		number -= 1


def main(argv=None):
	
	number = 5
	prefix = False
	
	if argv is None:
		argv = sys.argv
	try:
		try:
			opts, args = getopt.getopt(argv[1:], "hn:pi:v", ["help", "number=", "prefix=", "import="])
		except getopt.error, msg:
			raise Usage(msg)
	
		# option processing
		for option, value in opts:
			if option == "-v":
				verbose = True
			if option in ("-h", "--help"):
				raise Usage(help_message)
			if option in ("-n", "--number"):
				number = int(value)
			if option in ("-p", "--prefixe"):
				prefix = True
	
		generate(prefix, number)
	
	except Usage, err:
		print >> sys.stderr, sys.argv[0].split("/")[-1] + ": " + str(err.msg)
		print >> sys.stderr, "\t for help use --help"
		return 2


if __name__ == "__main__":
	sys.exit(main())
